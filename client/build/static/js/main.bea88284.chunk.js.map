{"version":3,"sources":["utils/history.tsx","react-auth0-spa.js","components/AnimatedLogo.tsx","components/NavBar.tsx","components/Landing.tsx","components/Project.tsx","components/Footer.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["createBrowserHistory","DEFAULT_REDIRECT_CALLBACK","window","history","replaceState","document","title","location","pathname","Auth0Context","React","createContext","useAuth0","useContext","Auth0Provider","children","onRedirectCallback","initOptions","useState","isAuthenticated","setIsAuthenticated","user","setUser","auth0Client","setAuth0","loading","setLoading","popupOpen","setPopupOpen","useEffect","a","createAuth0Client","auth0FromHook","search","includes","handleRedirectCallback","appState","getUser","initAuth0","loginWithPopup","params","console","error","Provider","value","getIdTokenClaims","loginWithRedirect","getTokenSilently","getTokenWithPopup","logout","AnimatedLogo","color","height","width","style","xmlns","viewBox","cx","cy","r","fill","x1","x2","y1","y2","stroke","attributeName","values","dur","repeatCount","NavBar","Navbar","bg","expand","collapseOnSelect","Brand","className","Toggle","aria-controls","outline","Collapse","id","Nav","Item","Button","variant","onClick","icon","faKey","marginRight","Link","faBan","Landing","Card","minHeight","log","faPlus","to","textDecoration","Project","Form","Group","Label","Control","type","Text","as","Footer","faQuestionCircle","faShieldAlt","href","faEnvelope","App","Container","path","exact","component","Boolean","hostname","match","ReactDOM","render","domain","process","client_id","redirect_uri","origin","push","targetUrl","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.bea88284.chunk.js","sourcesContent":["import { createBrowserHistory } from \"history\";\nexport default createBrowserHistory();\n","// src/react-auth0-spa.js\nimport React, { useState, useEffect, useContext } from \"react\";\nimport createAuth0Client from \"@auth0/auth0-spa-js\";\n\nconst DEFAULT_REDIRECT_CALLBACK = () =>\n  window.history.replaceState({}, document.title, window.location.pathname);\n\nexport const Auth0Context = React.createContext();\nexport const useAuth0 = () => useContext(Auth0Context);\nexport const Auth0Provider = ({\n  children,\n  onRedirectCallback = DEFAULT_REDIRECT_CALLBACK,\n  ...initOptions\n}) => {\n  const [isAuthenticated, setIsAuthenticated] = useState();\n  const [user, setUser] = useState();\n  const [auth0Client, setAuth0] = useState();\n  const [loading, setLoading] = useState(true);\n  const [popupOpen, setPopupOpen] = useState(false);\n\n  useEffect(() => {\n    const initAuth0 = async () => {\n      const auth0FromHook = await createAuth0Client(initOptions);\n      setAuth0(auth0FromHook);\n\n      if (\n        window.location.search.includes(\"code=\") &&\n        window.location.search.includes(\"state=\")\n      ) {\n        const { appState } = await auth0FromHook.handleRedirectCallback();\n        onRedirectCallback(appState);\n      }\n\n      const isAuthenticated = await auth0FromHook.isAuthenticated();\n\n      setIsAuthenticated(isAuthenticated);\n\n      if (isAuthenticated) {\n        const user = await auth0FromHook.getUser();\n        setUser(user);\n      }\n\n      setLoading(false);\n    };\n    initAuth0();\n    // eslint-disable-next-line\n  }, []);\n\n  const loginWithPopup = async (params = {}) => {\n    setPopupOpen(true);\n    try {\n      await auth0Client.loginWithPopup(params);\n    } catch (error) {\n      console.error(error);\n    } finally {\n      setPopupOpen(false);\n    }\n    const user = await auth0Client.getUser();\n    setUser(user);\n    setIsAuthenticated(true);\n  };\n\n  const handleRedirectCallback = async () => {\n    setLoading(true);\n    await auth0Client.handleRedirectCallback();\n    const user = await auth0Client.getUser();\n    setLoading(false);\n    setIsAuthenticated(true);\n    setUser(user);\n  };\n  return (\n    <Auth0Context.Provider\n      value={{\n        isAuthenticated,\n        user,\n        loading,\n        popupOpen,\n        loginWithPopup,\n        handleRedirectCallback,\n        getIdTokenClaims: (...p) => auth0Client.getIdTokenClaims(...p),\n        loginWithRedirect: (...p) => auth0Client.loginWithRedirect(...p),\n        getTokenSilently: (...p) => auth0Client.getTokenSilently(...p),\n        getTokenWithPopup: (...p) => auth0Client.getTokenWithPopup(...p),\n        logout: (...p) => auth0Client.logout(...p),\n      }}\n    >\n      {children}\n    </Auth0Context.Provider>\n  );\n};\n","import React from \"react\";\n\nconst AnimatedLogo = ({\n  color = \"#f8f9fa\",\n  height = \"5rem\",\n  width = \"5rem\",\n}) => {\n  return (\n    <svg\n      style={{\n        height: height,\n        width: width,\n      }}\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 60 60\"\n    >\n      <circle cx=\"30\" cy=\"10\" r=\"3\" fill={color} />\n      <line x1=\"30\" x2=\"15\" y1=\"10\" y2=\"30\" stroke={color} />\n      <circle cx=\"15\" cy=\"30\" r=\"3\" fill={color} />\n      <line x1=\"30\" x2=\"45\" y1=\"10\" y2=\"30\" stroke={color} />\n      <circle cx=\"45\" cy=\"30\" r=\"3\" fill={color} />\n      <line x1=\"15\" x2=\"5\" y1=\"30\" y2=\"50\" stroke={color} />\n      <circle cx=\"5\" cy=\"50\" r=\"3\" fill={color} />\n      <line x1=\"15\" x2=\"25\" y1=\"30\" y2=\"50\" stroke={color} />\n      <circle cx=\"25\" cy=\"50\" r=\"3\" fill={color} />\n      <line x1=\"45\" x2=\"35\" y1=\"30\" y2=\"50\" stroke={color} />\n      <circle cx=\"35\" cy=\"50\" r=\"3\" fill={color} />\n      <line x1=\"45\" x2=\"55\" y1=\"30\" y2=\"50\" stroke={color}>\n        <animate\n          attributeName=\"x2\"\n          values=\"45;55;45\"\n          dur=\"2s\"\n          repeatCount=\"indefinite\"\n        />\n        <animate\n          attributeName=\"y2\"\n          values=\"30;50;30\"\n          dur=\"2s\"\n          repeatCount=\"indefinite\"\n        />\n      </line>\n      <circle cx=\"75\" cy=\"50\" r=\"3\" fill={color}>\n        <animate\n          attributeName=\"cx\"\n          values=\"45;55;45\"\n          dur=\"2s\"\n          repeatCount=\"indefinite\"\n        />\n        <animate\n          attributeName=\"cy\"\n          values=\"30;50;30\"\n          dur=\"2s\"\n          repeatCount=\"indefinite\"\n        />\n      </circle>\n    </svg>\n  );\n};\n\nexport default AnimatedLogo;\n","import React from \"react\";\nimport Navbar from \"react-bootstrap/Navbar\";\nimport Nav from \"react-bootstrap/Nav\";\nimport Button from \"react-bootstrap/Button\";\nimport { FontAwesomeIcon as FaIcon } from \"@fortawesome/react-fontawesome\";\nimport { faKey, faBan } from \"@fortawesome/free-solid-svg-icons\";\nimport { useAuth0 } from \"../react-auth0-spa\";\n\nimport AnimatedLogo from \"./AnimatedLogo\";\n\nconst NavBar = () => {\n  const { isAuthenticated, loginWithRedirect, logout } = useAuth0();\n\n  return (\n    <Navbar bg=\"dark\" expand=\"md\" collapseOnSelect>\n      <Navbar.Brand className=\"text-light\">\n        <AnimatedLogo height={\"2rem\"} width={\"2rem\"} />\n        <span className=\"ml-1\">Pure WACC</span>\n      </Navbar.Brand>\n      <Navbar.Toggle\n        className=\"mb-2\"\n        aria-controls=\"basic-navbar-nav\"\n        style={{ outline: \"none\" }}\n      />\n      <Navbar.Collapse id=\"basic-navbar-nav\" className=\"justify-content-end\">\n        <Nav>\n          {!isAuthenticated && (\n            <Nav.Item>\n              <Button\n                variant=\"link\"\n                className=\"mr-2\"\n                onClick={() => loginWithRedirect({})}\n              >\n                <FaIcon icon={faKey} style={{ marginRight: \"0.4rem\" }}></FaIcon>\n                Log in\n              </Button>\n            </Nav.Item>\n          )}\n          {isAuthenticated && (\n            <>\n              <Nav.Link className=\"text-light mr-2\" onClick={() => logout()}>\n                <FaIcon icon={faBan} style={{ marginRight: \"0.4rem\" }}></FaIcon>\n                Log out\n              </Nav.Link>\n            </>\n          )}\n        </Nav>\n      </Navbar.Collapse>\n    </Navbar>\n  );\n};\n\nexport default NavBar;\n","import React from \"react\";\nimport Button from \"react-bootstrap/Button\";\nimport { FontAwesomeIcon as FaIcon } from \"@fortawesome/react-fontawesome\";\nimport { faKey, faPlus } from \"@fortawesome/free-solid-svg-icons\";\n\nimport { useAuth0 } from \"../react-auth0-spa\";\nimport Card from \"react-bootstrap/Card\";\nimport { Link } from \"react-router-dom\";\n\nconst Landing = () => {\n  const { loading, isAuthenticated, loginWithRedirect } = useAuth0();\n\n  if (loading) return <p>Loading...</p>;\n  return (\n    <Card\n      bg=\"dark\"\n      className=\"p-4 d-flex flex-column justify-content-center align-items-center\"\n      style={{ minHeight: \"50vh\" }}\n    >\n      <h5 className=\"m-4\">Welcome to Pure WACC</h5>\n      {!isAuthenticated && (\n        <div>\n          <Button variant=\"secondary\" onClick={() => loginWithRedirect({})}>\n            <FaIcon icon={faKey} style={{ marginRight: \"0.4rem\" }}></FaIcon>\n            Sign up\n          </Button>\n        </div>\n      )}\n      {isAuthenticated && (\n        <>\n          <Button\n            variant=\"outline-primary\"\n            onClick={() => console.log(\"create new project\")}\n          >\n            <FaIcon icon={faPlus} className=\"mr-2\"></FaIcon>\n            <Link\n              to=\"/project\"\n              className=\"text-light\"\n              style={{ textDecoration: \"none\" }}\n            >\n              New Project\n            </Link>\n          </Button>\n        </>\n      )}\n    </Card>\n  );\n};\n\nexport default Landing;\n","import React from \"react\";\nimport Card from \"react-bootstrap/Card\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\n\nconst Project = () => {\n  return (\n    <Card bg=\"dark\" className=\"p-4\" style={{ minHeight: \"50vh\" }}>\n      <Form>\n        <Form.Group>\n          <Form.Label>Project Name</Form.Label>\n          <Form.Control type=\"text\"></Form.Control>\n          <Form.Text className=\"text-muted\">\n            Enter a name for your new project.\n          </Form.Text>\n        </Form.Group>\n        <Form.Group>\n          <Form.Label>Select Currency</Form.Label>\n          <Form.Control as=\"select\">\n            <option>USD</option>\n            <option>EUR</option>\n            <option>NOK</option>\n          </Form.Control>\n          <Form.Text className=\"text-muted\">\n            The currency will be used to set the risk free rate.\n          </Form.Text>\n        </Form.Group>\n        <Form.Group>\n          <Form.Label>Select Industry</Form.Label>\n          <Form.Control as=\"select\">\n            <option>Telecom</option>\n            <option>Biotech</option>\n            <option>Software</option>\n          </Form.Control>\n          <Form.Text className=\"text-muted\">\n            The industry will be used to set the beta.\n          </Form.Text>\n        </Form.Group>\n        <Form.Group>\n          <Form.Label>Select Country</Form.Label>\n          <Form.Control as=\"select\">\n            <option>United States</option>\n            <option>China</option>\n            <option>United Kingdom</option>\n            <option>Germany</option>\n          </Form.Control>\n          <Form.Text className=\"text-muted\">\n            The country will be used to set the risk premium.\n          </Form.Text>\n        </Form.Group>\n        <Button variant=\"primary\" type=\"submit\">\n          Create Project\n        </Button>\n        <Form.Text className=\"text-muted\">\n          Create the project to get the Weighted Average Cost of Capital (WACC)\n          given by the selected values. You will get a report explaining how the\n          WACC is calculated.\n        </Form.Text>\n      </Form>\n    </Card>\n  );\n};\n\nexport default Project;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { FontAwesomeIcon as FaIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faEnvelope,\n  faQuestionCircle,\n  faShieldAlt,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport AnimatedLogo from \"./AnimatedLogo\";\n\nconst Footer = () => {\n  return (\n    <footer className=\"page-footer font-small bg-dark text-white pt-4\">\n      <div className=\"container-fluid text-center text-md-left\">\n        <div className=\"row\">\n          <div className=\"col-md-6 mt-md-0 mt-3\">\n            <h5 className=\"text-uppercase\">Resources</h5>\n            <ul className=\"list-group\">\n              <li className=\"list-group-item bg-dark border-0\">\n                <Link to=\"/about\" className=\"text-light\">\n                  <FaIcon icon={faQuestionCircle} className=\"mr-2\"></FaIcon>\n                  About\n                </Link>\n              </li>\n              <li className=\"list-group-item bg-dark border-0\">\n                <Link to=\"/about\" className=\"text-light\">\n                  <FaIcon icon={faShieldAlt} className=\"mr-2\"></FaIcon>\n                  Privacy\n                </Link>\n              </li>\n              <li className=\"list-group-item bg-dark border-0\">\n                <a href=\"https://www.pureokrs.com\" className=\"text-light\">\n                  <AnimatedLogo height=\"1rem\" width=\"1rem\" />\n                  <span className=\"ml-2\">Pure OKRs</span>\n                </a>\n              </li>\n            </ul>\n          </div>\n          <hr className=\"clearfix w-100 d-md-none pb-3\" />\n          <div className=\"col-md-6 mb-md-0 mb-3\">\n            <h5 className=\"text-uppercase\">Get in touch</h5>\n            <ul className=\"list-group\">\n              <li className=\"list-group-item bg-dark border-0\">\n                <a className=\"text-light\" href=\"mailto:contact@pureokrs.com\">\n                  <FaIcon icon={faEnvelope} className=\"mr-2\"></FaIcon>\n                  contact@pureokrs.com\n                </a>\n              </li>\n            </ul>\n          </div>\n        </div>\n      </div>\n    </footer>\n  );\n};\n\nexport default Footer;\n","import React from \"react\";\nimport Container from \"react-bootstrap/Container\";\nimport { Switch, Route, Router } from \"react-router-dom\";\n\nimport history from \"./utils/history\";\n\nimport NavBar from \"./components/NavBar\";\nimport Landing from \"./components/Landing\";\nimport Project from \"./components/Project\";\nimport Footer from \"./components/Footer\";\n\nfunction App() {\n  return (\n    <Router history={history}>\n      <NavBar />\n      <Container\n        className=\"p-4 d-flex flex-column justify-content-center\"\n        style={{ minHeight: \"calc(100vh - 259px)\" }}\n      >\n        <Switch>\n          <Route path=\"/\" exact component={Landing} />\n          <Route path=\"/project\" component={Project} />\n        </Switch>\n      </Container>\n      <Footer />\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./index.scss\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { Auth0Provider } from \"./react-auth0-spa\";\nimport history from \"./utils/history\";\n\n// A function that routes the user to the right place\n// after login\nconst onRedirectCallback: any = (appState: any) => {\n  history.push(\n    appState && appState.targetUrl\n      ? appState.targetUrl\n      : window.location.pathname\n  );\n};\n\nReactDOM.render(\n  <Auth0Provider\n    domain={process.env.REACT_APP_PUREWACC_AUTH0_DOMAIN}\n    client_id={process.env.REACT_APP_PUREWACC_AUTH0_CLIENT_ID}\n    redirect_uri={window.location.origin}\n    onRedirectCallback={onRedirectCallback}\n  >\n    <App />\n  </Auth0Provider>,\n  document.getElementById(\"root\")\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}